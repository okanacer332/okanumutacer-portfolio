(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[322],{2348:(e,i,a)=>{Promise.resolve().then(a.bind(a,2996))},2996:(e,i,a)=>{"use strict";a.r(i),a.d(i,{default:()=>M});var r=a(5155),t=a(4581),l=a(700),n=a(7217),s=a(2390),o=a(8407),m=a(1101),d=a(6490),c=a(8534),p=a(3148),k=a(9204),u=a(1629),b=a(4220),v=a(1218),x=a(6632),h=a(2110),g=a(5933);a(2115);var y=a(2185),j=a(6295),f=a(6108);let A=[{title:"Fidanlık Y\xf6netim Sistemi (FidanYS)",description:"Fidanlık ve toptan fidan satış operasyonlarını u\xe7tan uca y\xf6netmek \xfczere geliştirdiğim web tabanlı bir uygulamadır. Kapsamlı envanter, satış, muhasebe ve raporlama s\xfcre\xe7lerini tek bir platformda birleştirerek operasyonel verimliliği artırmayı hedefler.",isLive:!0,liveUrl:"http://ata.fidanys.xyz",githubUrl:"https://github.com/okanacer332/FidanlikYonetimSistemi",stack:{frontend:"ReactJS, Next.js, Material-UI (MUI), Zod, Day.js",backend:"Java, Spring Boot, Spring Security (JWT tabanlı), Lombok",database:"MongoDB",devops:"PM2, Nginx",protocols:"RESTful API, Modbus, MQTT"},contributions:["Kullanıcı/yetkilendirme, fidan/envanter, tedarik\xe7i/m\xfcşteri, sipariş/mal kabul ve muhasebe/finansal işlem mod\xfcllerini u\xe7tan uca geliştirdim.","Sipariş sevkiyatlarında otomatik stok d\xfcş\xfcm\xfc/iadesi ve otomatik fatura oluşturma gibi s\xfcre\xe7leri implemente ettim.","Kapsamlı stok y\xf6netimi, cari hesap takibi ve \xfcr\xfcn karlılığı gibi raporlama ekranları tasarladım ve PDF/CSV dışa aktarım \xf6zelliği ekledim.","JWT tabanlı kimlik doğrulama ve rol tabanlı erişim kontrol\xfc (RBAC) ile g\xfcvenli ve \xf6l\xe7eklenebilir bir yapı kurdum."]},{title:"Akıllı Şehir Trafik Y\xf6netim Sistemi",description:"B\xfcy\xfck şehirlerde trafik yoğunluğunu azaltmak ve akışı optimize etmek amacıyla geliştirilmiş, ger\xe7ek zamanlı veri analizi yapan bir sistem. Kamera verileri, sens\xf6rler ve GPS bilgilerini kullanarak trafik akışını izler, tahminde bulunur ve trafik ışıklarını dinamik olarak ayarlar.",isLive:!1,stack:{backend:"Java, Spring Boot, Spring Security (JWT), Node.js",database:"MongoDB, MSSQL",devops:"AWS (Lambda, S3, EC2), Jenkins CI/CD",protocols:"RESTful API, Modbus/MQTT"},contributions:["Ger\xe7ek zamanlı trafik verisi toplama ve işleme mod\xfcllerini geliştirdim.","Makine \xf6ğrenimi algoritmaları entegre ederek trafik yoğunluğu tahmini sağladım.","Web tabanlı bir izleme paneli (ReactJS) ve mobil uygulama i\xe7in RESTful API altyapısı kurdum.","AWS \xfczerinde y\xfcksek erişilebilir ve \xf6l\xe7eklenebilir bir altyapı tasarladım."]},{title:"Sağlık Takip ve Randevu Y\xf6netim Sistemi",description:"Hastaların sağlık verilerini takip edebildiği, randevu alıp y\xf6netebildiği ve doktorlarla g\xfcvenli iletişim kurabildiği web ve mobil uyumlu bir platform.",isLive:!1,stack:{frontend:"ReactJS, Next.js, Material-UI (MUI), Zod",backend:"Node.js, Express.js",database:"Oracle SQL, MongoDB",devops:"AWS Cognito, AWS S3"},contributions:["G\xfcvenli hasta kayıt y\xf6netimi ve randevu planlama mod\xfclleri geliştirdim.","Hasta ve doktor rolleri i\xe7in rol tabanlı erişim kontrol\xfc (RBAC) implemente ettim.","RESTful API'ler aracılığıyla mobil uygulama entegrasyonu sağladım.","Veri gizliliği ve g\xfcvenliği standartlarına uygun \xe7\xf6z\xfcmler \xfcrettim."]},{title:"E-Ticaret Stok ve Sipariş Otomasyon Sistemi",description:"K\xfc\xe7\xfck ve orta \xf6l\xe7ekli e-ticaret işletmeleri i\xe7in stok y\xf6netimi, sipariş takibi, faturalandırma ve raporlama s\xfcre\xe7lerini otomatize eden kapsamlı bir sistem.",isLive:!1,stack:{frontend:"ReactJS",backend:"C#, .NET Core",database:"MSSQL",devops:"Jenkins CI/CD",other:"RESTful API (\xd6deme ve Kargo Entegrasyonu), Day.js"},contributions:["Kapsamlı envanter y\xf6netimi, otomatik stok d\xfcş\xfcm\xfc ve sipariş işleme mod\xfclleri geliştirdim.","Otomatik fatura oluşturma ve muhasebe entegrasyonu sağladım.","\xdcr\xfcn karlılığı ve satış performansları gibi raporlama ekranları tasarladım.","Sistemin performansını artırmak i\xe7in test s\xfcre\xe7lerini uyguladım."]},{title:"End\xfcstriyel Veri Toplama ve İzleme Platformu",description:"Fabrika ortamlarındaki sens\xf6rlerden ve makinelerden gelen verileri toplayıp işleyen, ger\xe7ek zamanlı izleme ve alarm mekanizmaları sunan bir platform.",isLive:!1,stack:{backend:"Java, Spring Boot",database:"DynamoDB, MongoDB",devops:"AWS Lambda, AWS S3, PM2",protocols:"Modbus, MQTT"},contributions:["Farklı end\xfcstriyel protokoller \xfczerinden veri toplama ve normalleştirme mod\xfclleri geliştirdim.","ReactJS ile ger\xe7ek zamanlı veri g\xf6rselleştirme panelleri oluşturdum.","Anormal veri değerlerinde otomatik alarm ve bildirim sistemleri kurdum.","Veri g\xfcvenliği ve b\xfct\xfcnl\xfcğ\xfcn\xfc sağlamak i\xe7in test s\xfcre\xe7lerini uyguladım."]}],S=A.find(e=>e.isLive),z=A.filter(e=>!e.isLive),T=e=>{let{stack:i}=e;return(0,r.jsx)(t.A,{children:Object.entries(i).map(e=>{let[i,a]=e;return a&&(0,r.jsxs)(l.A,{variant:"body2",sx:{mb:1},children:[(0,r.jsxs)("strong",{style:{textTransform:"capitalize"},children:[i,":"]})," ",a]},i)})})};function M(){return(0,r.jsxs)(n.A,{id:"projeler-sayfasi",maxWidth:"lg",children:[(0,r.jsx)(l.A,{variant:"h4",component:"h1",gutterBottom:!0,sx:{fontWeight:"bold"},children:"Projelerim"}),(0,r.jsx)(s.A,{sx:{mb:4}}),S&&(0,r.jsxs)(t.A,{id:"one-cikan-proje",sx:{mb:8},children:[(0,r.jsxs)(l.A,{variant:"h5",component:"h2",gutterBottom:!0,sx:{display:"flex",alignItems:"center",gap:1.5,mb:3},children:[(0,r.jsx)(y.A,{color:"primary"})," \xd6ne \xc7ıkan Proje"]}),(0,r.jsx)(o.A,{elevation:4,sx:{p:{xs:2.5,sm:3,md:4},border:"1px solid",borderColor:"primary.main",boxShadow:e=>"0 0 25px ".concat(e.palette.primary.main,"33"),transition:"transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out","&:hover":{transform:"translateY(-8px)",boxShadow:e=>"0 0 35px ".concat(e.palette.primary.main,"55")}},children:(0,r.jsxs)(h.A,{container:!0,spacing:4,children:[(0,r.jsxs)(g.A,{size:{xs:12,md:7},children:[(0,r.jsx)(l.A,{variant:"h4",component:"h3",gutterBottom:!0,sx:{fontWeight:"bold"},children:S.title}),(0,r.jsx)(m.A,{label:"Canlıda (Giriş: admin/admin)",color:"success",variant:"filled",sx:{mb:2,backgroundColor:"primary.main",color:"background.default",fontWeight:"bold"}}),(0,r.jsx)(l.A,{color:"text.secondary",paragraph:!0,children:S.description}),(0,r.jsxs)(d.A,{sx:{p:0,mb:3},children:[S.liveUrl&&(0,r.jsx)(c.A,{href:S.liveUrl,target:"_blank",variant:"contained",color:"primary",children:"Projeyi G\xf6r"}),S.githubUrl&&(0,r.jsx)(c.A,{href:S.githubUrl,target:"_blank",variant:"outlined",color:"primary",children:"Kodu İncele"})]}),(0,r.jsx)(l.A,{variant:"h6",component:"h4",sx:{mb:1},children:"Teknolojiler"}),(0,r.jsx)(T,{stack:S.stack})]}),(0,r.jsxs)(g.A,{size:{xs:12,md:5},children:[(0,r.jsx)(l.A,{variant:"h6",component:"h4",sx:{mb:1},children:"Proje Kapsamı ve Katkılarım"}),(0,r.jsx)(p.A,{dense:!0,children:S.contributions.map((e,i)=>(0,r.jsxs)(k.Ay,{sx:{p:0,alignItems:"flex-start"},children:[(0,r.jsx)(u.A,{sx:{minWidth:"32px",mt:"4px"},children:(0,r.jsx)(f.A,{color:"primary",fontSize:"small"})}),(0,r.jsx)(b.A,{primary:e})]},i))})]})]})})]}),(0,r.jsxs)(t.A,{id:"diger-calismalar",children:[(0,r.jsxs)(l.A,{variant:"h5",component:"h2",gutterBottom:!0,sx:{display:"flex",alignItems:"center",gap:1.5,mb:3},children:[(0,r.jsx)(j.A,{})," Diğer \xc7alışmalarım"]}),(0,r.jsx)(h.A,{container:!0,spacing:4,children:z.map(e=>(0,r.jsx)(g.A,{size:{xs:12,md:6},children:(0,r.jsx)(v.A,{sx:{height:"100%",display:"flex",flexDirection:"column"},children:(0,r.jsxs)(x.A,{sx:{flexGrow:1},children:[(0,r.jsx)(l.A,{variant:"h6",component:"h3",gutterBottom:!0,children:e.title}),(0,r.jsx)(l.A,{color:"text.secondary",paragraph:!0,children:e.description}),(0,r.jsx)(T,{stack:e.stack})]})})},e.title))})]})]})}},5933:(e,i,a)=>{"use strict";a.d(i,{A:()=>l});var r=a(5155);a(2115);var t=a(2110);let l=e=>{let{size:i,children:a,...l}=e;return(0,r.jsx)(t.A,{...i,...l,children:a})}}},e=>{var i=i=>e(e.s=i);e.O(0,[514,534,695,544,441,684,358],()=>i(2348)),_N_E=e.O()}]);